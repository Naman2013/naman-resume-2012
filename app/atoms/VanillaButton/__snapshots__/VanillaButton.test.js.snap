// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VanillaButton should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <VanillaButton
    handleClick={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
      }
    }
    theme={Object {}}
  >
    <div />
  </VanillaButton>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <button
          className="jsx-1715659863"
          onClick={
            [MockFunction] {
              "calls": Array [
                Array [],
              ],
            }
          }
          style={Object {}}
        >
          <div />
        </button>,
        <JSXStyle
          css={
            Array [
              "button.jsx-1715659863{background:none;border:none;margin:0;padding:0;cursor:pointer;}",
            ]
          }
          styleId="1715659863"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div />,
          "className": "jsx-1715659863",
          "onClick": [MockFunction] {
            "calls": Array [
              Array [],
            ],
          },
          "style": Object {},
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "css": Array [
            "button.jsx-1715659863{background:none;border:none;margin:0;padding:0;cursor:pointer;}",
          ],
          "styleId": "1715659863",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <button
            className="jsx-1715659863"
            onClick={
              [MockFunction] {
                "calls": Array [
                  Array [],
                ],
              }
            }
            style={Object {}}
          >
            <div />
          </button>,
          <JSXStyle
            css={
              Array [
                "button.jsx-1715659863{background:none;border:none;margin:0;padding:0;cursor:pointer;}",
              ]
            }
            styleId="1715659863"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div />,
            "className": "jsx-1715659863",
            "onClick": [MockFunction] {
              "calls": Array [
                Array [],
              ],
            },
            "style": Object {},
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "css": Array [
              "button.jsx-1715659863{background:none;border:none;margin:0;padding:0;cursor:pointer;}",
            ],
            "styleId": "1715659863",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
