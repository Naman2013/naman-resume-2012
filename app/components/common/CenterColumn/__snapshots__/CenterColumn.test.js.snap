// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CenterColumn should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CenterColumn
    theme={Object {}}
  >
    <div />
  </CenterColumn>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div />,
        <JSXStyle
          css={
            Array [
              ".root.jsx-774188919{width:100%;margin:0 auto;-webkit-transition:width 0.25s;transition:width 0.25s;}",
              "@media screen and (min-width: 768px){.root.jsx-774188919{width:620px;}}",
              "@media screen and (min-width: 1024px){.root.jsx-774188919{width:780px;}}",
              "@media screen and (min-width: 1366px){.root.jsx-774188919{width:940px;}}",
            ]
          }
          styleId="774188919"
        />,
      ],
      "className": "jsx-774188919 root",
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "css": Array [
            ".root.jsx-774188919{width:100%;margin:0 auto;-webkit-transition:width 0.25s;transition:width 0.25s;}",
            "@media screen and (min-width: 768px){.root.jsx-774188919{width:620px;}}",
            "@media screen and (min-width: 1024px){.root.jsx-774188919{width:780px;}}",
            "@media screen and (min-width: 1366px){.root.jsx-774188919{width:940px;}}",
          ],
          "styleId": "774188919",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div />,
          <JSXStyle
            css={
              Array [
                ".root.jsx-774188919{width:100%;margin:0 auto;-webkit-transition:width 0.25s;transition:width 0.25s;}",
                "@media screen and (min-width: 768px){.root.jsx-774188919{width:620px;}}",
                "@media screen and (min-width: 1024px){.root.jsx-774188919{width:780px;}}",
                "@media screen and (min-width: 1366px){.root.jsx-774188919{width:940px;}}",
              ]
            }
            styleId="774188919"
          />,
        ],
        "className": "jsx-774188919 root",
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "css": Array [
              ".root.jsx-774188919{width:100%;margin:0 auto;-webkit-transition:width 0.25s;transition:width 0.25s;}",
              "@media screen and (min-width: 768px){.root.jsx-774188919{width:620px;}}",
              "@media screen and (min-width: 1024px){.root.jsx-774188919{width:780px;}}",
              "@media screen and (min-width: 1366px){.root.jsx-774188919{width:940px;}}",
            ],
            "styleId": "774188919",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
